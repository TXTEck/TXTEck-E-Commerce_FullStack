{"ast":null,"code":"import _defineProperty from \"C:\\\\nodejs_projects\\\\TXTEck-E-Commerce_FullStack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\nodejs_projects\\\\TXTEck-E-Commerce_FullStack\\\\client\\\\src\\\\components\\\\Checkout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PayPalMessage from \"./PayPalMessage\";\nimport { PayPalButtons, PayPalScriptProvider } from \"@paypal/react-paypal-js\";\nexport default class Checkout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createOrder = (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: this.props.price\n          }\n        }]\n      });\n    };\n\n    this.onApprove = paymentData => {\n      const updatedSaleData = _objectSpread({}, this.props.saleData, {\n        paypalPaymentID: paymentData.orderID\n      });\n\n      axios.post(\"\".concat(SERVER_HOST, \"/sales\"), updatedSaleData, {\n        headers: {\n          \"authorization\": localStorage.token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalOrderID: paymentData.orderID,\n          redirectToPayPalMessage: true\n        });\n        localStorage.removeItem('cart');\n\n        if (this.props.onPaymentSuccess) {\n          this.props.onPaymentSuccess();\n        }\n      }).catch(errorData => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalOrderID: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalOrderID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : null, React.createElement(PayPalScriptProvider, {\n      options: {\n        currency: \"EUR\",\n        \"client-id\": SANDBOX_CLIENT_ID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(PayPalButtons, {\n      style: {\n        layout: \"horizontal\"\n      },\n      createOrder: this.createOrder,\n      onApprove: this.onApprove,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\TXTEck-E-Commerce_FullStack\\client\\src\\components\\Checkout.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalMessage","PayPalButtons","PayPalScriptProvider","Checkout","constructor","props","createOrder","data","actions","order","create","purchase_units","amount","value","price","onApprove","paymentData","updatedSaleData","saleData","paypalPaymentID","orderID","post","headers","localStorage","token","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalOrderID","redirectToPayPalMessage","removeItem","onPaymentSuccess","catch","errorData","ERROR","onError","onCancel","cancelData","CANCEL","state","render","currency","layout"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport axios from \"axios\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nimport {SANDBOX_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\r\nimport PayPalMessage from \"./PayPalMessage\"\r\nimport {PayPalButtons, PayPalScriptProvider} from \"@paypal/react-paypal-js\"\r\n\r\n\r\nexport default class Checkout extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {redirectToPayPalMessage:false,\r\n                      payPalMessageType:null,\r\n                      payPalOrderID:null}\r\n    }\r\n    \r\n    \r\n    createOrder = (data, actions) => \r\n    {\r\n        return actions.order.create({purchase_units:[{amount:{value:this.props.price}}]})\r\n    }\r\n    \r\n    \r\n    onApprove = paymentData =>\r\n    {      \r\n        const updatedSaleData = {\r\n            ...this.props.saleData,\r\n            paypalPaymentID: paymentData.orderID\r\n        };\r\n    \r\n        axios.post(`${SERVER_HOST}/sales`, updatedSaleData, {\r\n            headers: {\r\n                \"authorization\": localStorage.token,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(res => \r\n        {                   \r\n            this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \r\n                           payPalOrderID:paymentData.orderID, \r\n                           redirectToPayPalMessage:true}) \r\n            \r\n            localStorage.removeItem('cart');\r\n\r\n            if (this.props.onPaymentSuccess) {\r\n                this.props.onPaymentSuccess();\r\n            }\r\n        })\r\n        .catch(errorData =>\r\n        {           \r\n            this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n                           redirectToPayPalMessage:true}) \r\n        })\r\n    }\r\n \r\n        \r\n    onError = errorData => \r\n    {\r\n        this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \r\n                       redirectToPayPalMessage:true})         \r\n    }\r\n    \r\n    \r\n    onCancel = cancelData => \r\n    {\r\n        // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\r\n        this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \r\n                       redirectToPayPalMessage:true})       \r\n    }\r\n    \r\n                \r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                {this.state.redirectToPayPalMessage ? <Redirect to= {`/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalOrderID}`}/> : null}            \r\n            \r\n                <PayPalScriptProvider options={{currency:\"EUR\", \"client-id\":SANDBOX_CLIENT_ID }}>\r\n                    <PayPalButtons style={{layout: \"horizontal\"}} createOrder={this.createOrder} onApprove={this.onApprove} onError={this.onError} onCancel={this.onCancel}/>\r\n                </PayPalScriptProvider>\r\n            </div>\r\n    )}\r\n}"]},"metadata":{},"sourceType":"module"}