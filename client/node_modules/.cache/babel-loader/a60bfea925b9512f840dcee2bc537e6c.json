{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\TXTEck-E-Commerce_FullStack\\\\client\\\\src\\\\components\\\\ShoppingCart.js\";\nimport React, { Component } from 'react';\nimport Checkout from './Checkout';\nimport \"../css/ShoppingCart.css\";\nexport default class ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckout = () => {\n      const customerName = localStorage.name;\n      const customerEmail = localStorage.email;\n      const saleData = {\n        customerName: customerName,\n        customerEmail: customerEmail,\n        paypalPaymentID: \"PAYPAL_PAYMENT_ID\",\n        // This should be retrieved from the PayPal transaction\n        price: this.state.total,\n        items: this.state.cartItems,\n        purchaseDate: new Date() // This will be set automatically by Mongoose to the current date and time\n\n      };\n    };\n\n    this.calculateTotal = () => {\n      const total = this.state.cartItems.reduce((acc, item) => acc + item.price, 0);\n      this.setState({\n        total\n      });\n    };\n\n    this.removeFromCart = index => {\n      let cartItems = this.state.cartItems;\n      cartItems.splice(index, 1);\n      this.setState({\n        cartItems\n      }, () => {\n        this.calculateTotal();\n        localStorage.setItem('cart', JSON.stringify(cartItems));\n      });\n      window.location.reload();\n    };\n\n    this.state = {\n      cartItems: JSON.parse(localStorage.getItem('cart')) || [],\n      total: 0\n    };\n  }\n\n  componentDidMount() {\n    this.calculateTotal();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(\"div\", {\n      id: \"cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.cartItems.map((item, index) => React.createElement(\"div\", {\n      className: \"card\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"imageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: item.image,\n      alt: \"\".concat(item.player, \"'s Jersey\"),\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"team\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, item.team), React.createElement(\"h3\", {\n      className: \"player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, item.player), React.createElement(\"div\", {\n      className: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"$\".concat(item.price)), React.createElement(\"div\", {\n      className: \"size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Size: \".concat(item.size))), React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.removeFromCart(index),\n      className: \"remove-from-cart-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Remove\")))), React.createElement(\"div\", {\n      className: \"total-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Total: $\", this.state.total.toFixed(2)), React.createElement(Checkout, {\n      price: this.state.total.toFixed(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\TXTEck-E-Commerce_FullStack\\client\\src\\components\\ShoppingCart.js"],"names":["React","Component","Checkout","ShoppingCart","constructor","props","handleCheckout","customerName","localStorage","name","customerEmail","email","saleData","paypalPaymentID","price","state","total","items","cartItems","purchaseDate","Date","calculateTotal","reduce","acc","item","setState","removeFromCart","index","splice","setItem","JSON","stringify","window","location","reload","parse","getItem","componentDidMount","render","map","image","player","team","size","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Checkout from './Checkout';\r\nimport \"../css/ShoppingCart.css\";\r\n\r\nexport default class ShoppingCart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cartItems: JSON.parse(localStorage.getItem('cart')) || [],\r\n            total: 0\r\n        };\r\n    }\r\n\r\n    handleCheckout = () => {\r\n        const customerName = localStorage.name;\r\n        const customerEmail = localStorage.email;\r\n\r\n        const saleData = {\r\n            customerName: customerName,\r\n            customerEmail: customerEmail,\r\n            paypalPaymentID: \"PAYPAL_PAYMENT_ID\", // This should be retrieved from the PayPal transaction\r\n            price: this.state.total,\r\n            items: this.state.cartItems,\r\n            purchaseDate: new Date() // This will be set automatically by Mongoose to the current date and time\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.calculateTotal();\r\n    }\r\n\r\n    calculateTotal = () => {\r\n        const total = this.state.cartItems.reduce((acc, item) => acc + item.price, 0);\r\n        this.setState({ total });\r\n    }\r\n\r\n    removeFromCart = (index) => {\r\n        let { cartItems } = this.state;\r\n        cartItems.splice(index, 1);\r\n        this.setState({ cartItems }, () => {\r\n            this.calculateTotal();\r\n            localStorage.setItem('cart', JSON.stringify(cartItems));\r\n        });\r\n        window.location.reload();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Shopping Cart</h2>\r\n                <div id=\"cart-container\">\r\n\r\n                    {this.state.cartItems.map((item, index) => (\r\n                        <div className=\"card\" key={index}>\r\n                            <div className=\"imageContainer\">\r\n                                <img src={item.image} alt={`${item.player}'s Jersey`} className=\"image\" />\r\n                            </div>\r\n                            <div className=\"details\">\r\n                                <h2 className=\"team\">{item.team}</h2>\r\n                                <h3 className=\"player\">{item.player}</h3>\r\n                                <div className=\"price\">{`$${item.price}`}</div>\r\n                                <div className=\"size\">{`Size: ${item.size}`}</div>\r\n                            </div>\r\n                            <div className=\"actions\">\r\n                                <button onClick={() => this.removeFromCart(index)} className=\"remove-from-cart-button\">Remove</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    <div className=\"total-section\">\r\n                        <h3>Total: ${this.state.total.toFixed(2)}</h3>\r\n                        <Checkout price = {this.state.total.toFixed(2)}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}    \r\n"]},"metadata":{},"sourceType":"module"}